@startuml       pumlpy

Interface pumlpy.interface.UMLExtractor {
        + max_depth:builtins.int
        + space:pumlpy.interface.UMLSpace
        + include_extern:builtins.bool
        + extract
        + refresh
}
Interface pumlpy.interface.UMLSpace {
        + name:builtins.str
        + template:builtins.str
        + items:builtins.dict
        + relations:builtins.list
        + add_item
        + add_relation
        + generate_uml
}
Class pumlpy.impl.base.BaseExtractor {
        + space:pumlpy.interface.UMLSpace
        + max_depth:builtins.int
        + include_extern:builtins.bool
        + extract
        + extract_class
        + extract_method
        + extract_params
        + refresh
}
Class pumlpy.impl.base.BaseUMLSpaceItem {


}
Interface pumlpy.interface.UMLClass {
        + docstring:builtins.str
        + is_interface:builtins.bool
        + is_builtin:builtins.bool
        + ancestors:builtins.list
        + public_attributes:builtins.list
        + protected_attributes:builtins.list
        + private_attributes:builtins.list
        + public_methods:builtins.list
        + protected_methods:builtins.list
        + private_methods:builtins.list
        + to_puml
}
Class pumlpy.impl.base.BaseUMLClass {

        + to_puml
        # _BaseUMLClass__check_builtins
        # _BaseUMLClass__extract_ancestors
        # _BaseUMLClass__extract_attributes
        # _BaseUMLClass__extract_methods
}
Interface pumlpy.interface.UMLMember {
        + name:builtins.str
        + mode:pumlpy.interface.UMLMemberMode
        + raw

}
Class pumlpy.impl.base.BaseUMLMember {

        + to_puml
        # _BaseUMLMember__infer_mode
}
Interface pumlpy.interface.UMLMethod {
        + docstring:builtins.str
        + params:builtins.list
        + returns:pumlpy.interface.UMLMember
        + to_puml
}
Class pumlpy.impl.base.BaseUMLMethod {

        + to_puml
        # _BaseUMLMethod__extract_signatures
}
Interface pumlpy.interface.UMLParams {
        + args:builtins.list
        + get_all_args
        + get_all_args_repr
        + to_puml
}
Class pumlpy.impl.base.BaseUMLParams {

        + get_all_args
        + get_all_args_repr
        + to_puml
        # _BaseUMLParams__extract_args
}
Interface pumlpy.interface.UMLRelation {
        + source:builtins.str
        + target:builtins.str
        + relation:pumlpy.interface.UMLRelationType
        + to_puml
}
Class pumlpy.impl.base.BaseUMLRelation {

        + register
        + to_puml
}
Class pumlpy.impl.base.BaseUMLSpace {

        + add_item
        + add_relation
        + generate_uml
        + to_puml
}
Interface pumlpy.interface.UMLSpaceItem {
        + empty:builtins.bool
        + template:builtins.str
        + itype:pumlpy.interface.UMLItemType
        + space:pumlpy.interface.UMLSpace
        + domain:builtins.str
        + full_qualname:builtins.str

}
Interface pumlpy.interface.UMLItem {
        + raw:builtins.object
        + to_puml
}
Class pumlpy.interface.UMLItemType {


}
Class pumlpy.interface.UMLMemberMode {


}
Interface pumlpy.interface.UMLPackage {
        + space:pumlpy.interface.UMLSpace
        + name:builtins.str
        + domain:builtins.str
        + items:builtins.list
        + packages:builtins.list

}
Class pumlpy.interface.UMLRelationType {


}
Class pumlpy.utils.UMLPackageInspector {

        # _UMLPackageInspector__extract_classes
        # _UMLPackageInspector__extract_packages
}

pumlpy.impl.base.BaseExtractor ..|> pumlpy.interface.UMLExtractor
pumlpy.impl.base.BaseExtractor --> pumlpy.interface.UMLSpace
pumlpy.impl.base.BaseUMLClass --|> pumlpy.impl.base.BaseUMLSpaceItem
pumlpy.impl.base.BaseUMLClass ..|> pumlpy.interface.UMLClass
pumlpy.impl.base.BaseUMLMember ..|> pumlpy.interface.UMLMember
pumlpy.impl.base.BaseUMLMethod --|> pumlpy.impl.base.BaseUMLSpaceItem
pumlpy.impl.base.BaseUMLMethod ..|> pumlpy.interface.UMLMethod
pumlpy.impl.base.BaseUMLParams --|> pumlpy.impl.base.BaseUMLSpaceItem
pumlpy.impl.base.BaseUMLParams ..|> pumlpy.interface.UMLParams
pumlpy.impl.base.BaseUMLRelation ..|> pumlpy.interface.UMLRelation
pumlpy.impl.base.BaseUMLSpace ..|> pumlpy.interface.UMLSpace
pumlpy.impl.base.BaseUMLSpaceItem ..|> pumlpy.interface.UMLSpaceItem
pumlpy.interface.UMLClass ..|> pumlpy.interface.UMLItem
pumlpy.interface.UMLClass ..|> pumlpy.interface.UMLSpaceItem
pumlpy.interface.UMLExtractor --> pumlpy.interface.UMLSpace
pumlpy.interface.UMLItemType --|> enum.Enum
pumlpy.interface.UMLMember --> pumlpy.interface.UMLMemberMode
pumlpy.interface.UMLMemberMode --|> enum.Enum
pumlpy.interface.UMLMethod ..|> pumlpy.interface.UMLItem
pumlpy.interface.UMLMethod ..|> pumlpy.interface.UMLSpaceItem
pumlpy.interface.UMLMethod --> pumlpy.interface.UMLMember
pumlpy.interface.UMLPackage --> pumlpy.interface.UMLSpace
pumlpy.interface.UMLParams ..|> pumlpy.interface.UMLItem
pumlpy.interface.UMLParams ..|> pumlpy.interface.UMLSpaceItem
pumlpy.interface.UMLRelation ..|> pumlpy.interface.UMLItem
pumlpy.interface.UMLRelation --> pumlpy.interface.UMLRelationType
pumlpy.interface.UMLRelationType --|> enum.Enum
pumlpy.interface.UMLSpaceItem --> pumlpy.interface.UMLItemType
pumlpy.interface.UMLSpaceItem --> pumlpy.interface.UMLSpace
pumlpy.utils.UMLPackageInspector ..|> pumlpy.interface.UMLPackage

@enduml